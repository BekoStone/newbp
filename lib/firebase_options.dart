// File generated by FlutterFire CLI.
// ignore_for_file: type=lint
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;

/// Default [FirebaseOptions] for use with your Firebase apps.
class DefaultFirebaseOptions {
  static FirebaseOptions get currentPlatform {
    if (kIsWeb) {
      return web;
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return android;
      case TargetPlatform.iOS:
        return ios;
      case TargetPlatform.macOS:
        return macos;
      case TargetPlatform.windows:
        return windows;
      case TargetPlatform.linux:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }

  // SECURITY: Use environment variables or dart-define for production
  static String get _webApiKey => const String.fromEnvironment(
    'FIREBASE_WEB_API_KEY',
    defaultValue: 'AIzaSyD4crPLvGOAocVN4UOOyvM7Xy7B2HvV2S4', // fallback for dev
  );
  
  static String get _androidApiKey => const String.fromEnvironment(
    'FIREBASE_ANDROID_API_KEY', 
    defaultValue: 'AIzaSyBLOjaTH_WBiRdma7obIKc5BkqEpA6BRoM', // fallback for dev
  );
  
  static String get _iosApiKey => const String.fromEnvironment(
    'FIREBASE_IOS_API_KEY',
    defaultValue: 'AIzaSyAgFmsfbEolr21z_kHqH9-iPNuc0KqeebA', // fallback for dev
  );

  static const String _projectId = 'puzzle-1-0';
  static const String _messagingSenderId = '316481672845';
  static const String _storageBucket = 'puzzle-1-0.firebasestorage.app';

  static FirebaseOptions get web => FirebaseOptions(
    apiKey: _webApiKey,
    appId: '1:316481672845:web:1dceded68160eb5084b4c4',
    messagingSenderId: _messagingSenderId,
    projectId: _projectId,
    authDomain: '$_projectId.firebaseapp.com',
    storageBucket: _storageBucket,
    measurementId: 'G-76JMELXGZV',
  );

  static FirebaseOptions get android => FirebaseOptions(
    apiKey: _androidApiKey,
    appId: '1:316481672845:android:9fe815b353c9854f84b4c4',
    messagingSenderId: _messagingSenderId,
    projectId: _projectId,
    storageBucket: _storageBucket,
  );

  static FirebaseOptions get ios => FirebaseOptions(
    apiKey: _iosApiKey,
    appId: '1:316481672845:ios:8c7fabf0b9b50ca784b4c4',
    messagingSenderId: _messagingSenderId,
    projectId: _projectId,
    storageBucket: _storageBucket,
    iosBundleId: 'com.example.puzzle10',
  );

  static FirebaseOptions get macos => FirebaseOptions(
    apiKey: _iosApiKey,
    appId: '1:316481672845:ios:8c7fabf0b9b50ca784b4c4',
    messagingSenderId: _messagingSenderId,
    projectId: _projectId,
    storageBucket: _storageBucket,
    iosBundleId: 'com.example.puzzle10',
  );

  static FirebaseOptions get windows => FirebaseOptions(
    apiKey: _webApiKey,
    appId: '1:316481672845:web:0acb11943a1268b084b4c4',
    messagingSenderId: _messagingSenderId,
    projectId: _projectId,
    authDomain: '$_projectId.firebaseapp.com',
    storageBucket: _storageBucket,
    measurementId: 'G-6C0D9MS2J8',
  );
}